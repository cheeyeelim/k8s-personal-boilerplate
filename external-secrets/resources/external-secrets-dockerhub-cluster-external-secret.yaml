apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: dockerhub-mydomain-external-secret
spec:
  # The name to be used on the ExternalSecrets
  externalSecretName: dockerhub-secret

  # This is a list of basic label selector to select the namespaces to deploy ExternalSecrets to.
  # you can read more about them here https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#resources-that-support-set-based-requirements
  # The list is OR'd together, so if any of the namespaceSelectors match the namespace,
  # the ExternalSecret will be deployed to that namespace.
  namespaceSelector: {} # Matches all namespaces

  # How often the ClusterExternalSecret should reconcile itself
  # This will decide how often to check and make sure that the ExternalSecrets exist in the matching namespaces
  refreshTime: "1m"

  # Point to cluster secret store
  externalSecretSpec:
    secretStoreRef:
      name: vault-backend
      kind: ClusterSecretStore

    # RefreshInterval is the amount of time before the values reading again from the SecretStore provider
    # Valid time units are "ns", "us" (or "Âµs"), "ms", "s", "m", "h" (from time.ParseDuration)
    refreshInterval: "1m"

    target:
      name: dockerhub-secret
      # Specifies the ExternalSecret ownership details in the created Secret. Options:
      # - Owner: (default) Creates the Secret and sets .metadata.ownerReferences. If the ExternalSecret is deleted, the Secret will also be deleted.
      # - Merge: Does not create the Secret but merges data fields into the existing Secret (expects the Secret to already exist).
      # - Orphan: Creates the Secret but does not set .metadata.ownerReferences. If the Secret already exists, it will be updated.
      # - None: Does not create or update the Secret (reserved for future use with injector).
      creationPolicy: Owner
      # Specifies what happens to the Secret when data fields are deleted from the provider (e.g., Vault, AWS Parameter Store). Options:
      # - Retain: (default) Retains the Secret if all Secret data fields have been deleted from the provider.
      # - Delete: Removes the Secret if all Secret data fields from the provider are deleted.
      # - Merge: Removes keys from the Secret but not the Secret itself.
      deletionPolicy: Retain
      template:
        type: kubernetes.io/dockerconfigjson
        engineVersion: v2
        data:
          # See the link below for the format requirement
          # https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
          .dockerconfigjson: "{{ .dockerhubauthjson | toString }}"
    data:
      # secretKey is the key of the local secret name, remoteRef.key is the remote secret name
      # NOTE secretKey cannot have special symbols due to go language limitation. Using it will cause an error in templating
      - secretKey: dockerhubauthjson
        remoteRef:
          key: secret/data/dockerhub-secret
          property: key
